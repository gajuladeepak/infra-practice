
- name: disable default nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y


- name: install nodejs
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql

- name: create expense user
  ansible.builtin.user:
    name: expense

- name: import taks from common role
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

# - name: create a app directory
#   ansible.builtin.file:
#     path: /app
#     state: directory #we need to specifically mention directory otherwise it will create a file

# - name: download the backend code
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: extracting the file
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip #by default ansible thinks this is in ansible server so i need to move it to remote server
#     dest: /app
#     remote_src: yes #with this we are saying we have it in remote server no need to move

- name: install dependencies
  ansible.builtin.command: npm install
  args:
    chdir: /app #here we are changing the working directory to another directory (/app) to run the command(npm install)
    #chdir = changedirectory

- name: copy backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: ansible to install pymysql
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9

- name: import mysql data
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    name: all #from module
    state: import #from module #if in the state if 'dump' or 'import' values are given then name values should be all

- name: deamon reload
  ansible.builtin.systemd_service:
    daemon_reload: true
    state: restarted
    name: backend
